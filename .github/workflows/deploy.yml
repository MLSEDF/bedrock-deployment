name: 'Terraform Apply'

on:
  workflow_dispatch:

permissions: write-all

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production
    env:
      AWS_REGION: "eu-west-3"

    defaults:
      run:
        shell: bash  # ✅ Suppression du working-directory incorrect

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Configure AWS Credentials  # ✅ Ajout de cette étape
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-3

    - name: Set AWS Account ID
      id: account
      run: |
        echo "ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)" >> $GITHUB_ENV

    - name: Create S3 bucket for Terraform state
      run: |
        BUCKET_NAME="bedrock-state-files-${{ env.ACCOUNT_ID }}"
        if ! aws s3api head-bucket --bucket "$BUCKET_NAME" 2>/dev/null; then
          echo "Creating S3 bucket: $BUCKET_NAME"
          aws s3api create-bucket --bucket "$BUCKET_NAME" --region $AWS_REGION
        else
          echo "S3 bucket already exists: $BUCKET_NAME"
        fi

    - name: Check for existing Terraform state file
      id: check_state
      run: |
        if aws s3api head-object --bucket bedrock-state-files-${{ env.ACCOUNT_ID }} --key terraform.tfstate 2>/dev/null; then
          echo "STATE_EXISTS=true" >> $GITHUB_ENV
        else
          echo "STATE_EXISTS=false" >> $GITHUB_ENV
        fi

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.6.0

    - name: Terraform Operations
      run: |
        set -e  
        if [[ "${{ env.STATE_EXISTS }}" == "true" ]]; then
          aws s3 cp s3://bedrock-state-files-${{ env.ACCOUNT_ID }}/terraform.tfstate ./terraform.tfstate || true
        fi
        
        terraform init
        terraform plan -input=false
        terraform apply -auto-approve -input=false

    - name: Debug Terraform State  # ✅ Ajout pour vérifier que le state existe
      run: ls -l terraform.tfstate || echo "⚠️ terraform.tfstate manquant !"

    - name: Copy state file to S3
      if: always()
      run: |
        aws s3 cp ./terraform.tfstate s3://bedrock-state-files-${{ env.ACCOUNT_ID }}/terraform.tfstate
