name: 'Terraform Apply'

on:
  workflow_dispatch:

permissions: write-all

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: "eu-west-3"

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Ensure Terraform Directory Exists
      run: mkdir -p terraform

    - name: Set AWS Account ID
      id: account
      run: |
        echo "ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)" >> $GITHUB_ENV

    - name: Create S3 Bucket for Terraform State
      run: |
        BUCKET_NAME="bedrock-state-files-${{ env.ACCOUNT_ID }}"
        if ! aws s3api head-bucket --bucket "$BUCKET_NAME" 2>/dev/null; then
          echo "Creating S3 bucket: $BUCKET_NAME"
          aws s3api create-bucket --bucket "$BUCKET_NAME" --region $AWS_REGION
        else
          echo "S3 bucket already exists: $BUCKET_NAME"
        fi

    - name: Check for Existing State File
      id: check_state
      run: |
        if aws s3api head-object --bucket bedrock-state-files-${{ env.ACCOUNT_ID }} --key terraform.tfstate 2>/dev/null; then
          echo "STATE_EXISTS=true" >> $GITHUB_ENV
        else
          echo "STATE_EXISTS=false" >> $GITHUB_ENV
        fi

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.6.0  

    - name: Retrieve Terraform State (if exists)
      run: |
        if [[ "$STATE_EXISTS" == "true" ]]; then
          aws s3 cp s3://bedrock-state-files-${{ env.ACCOUNT_ID }}/terraform.tfstate ./terraform/terraform.tfstate || true
        fi

    - name: Terraform Init & Apply
      run: |
        cd terraform
        terraform init
        terraform plan -input=false
        terraform apply -auto-approve -input=false

    - name: Upload Terraform State to S3
      if: always()
      run: |
        aws s3 cp ./terraform/terraform.tfstate s3://bedrock-state-files-${{ env.ACCOUNT_ID }}/terraform.tfstate
